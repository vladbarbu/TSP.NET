//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ServiceReferencePhotosProps
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Photo", Namespace="http://schemas.datacontract.org/2004/07/PhotoProps", IsReference=true)]
    public partial class Photo : object
    {
        
        private System.DateTime Photo_DateField;
        
        private int Photo_IdField;
        
        private string Photo_PathField;
        
        private System.Collections.Generic.List<ServiceReferencePhotosProps.Props> PropsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Photo_Date
        {
            get
            {
                return this.Photo_DateField;
            }
            set
            {
                this.Photo_DateField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Photo_Id
        {
            get
            {
                return this.Photo_IdField;
            }
            set
            {
                this.Photo_IdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Photo_Path
        {
            get
            {
                return this.Photo_PathField;
            }
            set
            {
                this.Photo_PathField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<ServiceReferencePhotosProps.Props> Props
        {
            get
            {
                return this.PropsField;
            }
            set
            {
                this.PropsField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Props", Namespace="http://schemas.datacontract.org/2004/07/PhotoProps", IsReference=true)]
    public partial class Props : object
    {
        
        private ServiceReferencePhotosProps.Photo PhotoField;
        
        private int PhotoPhoto_IdField;
        
        private string Property_DescriptionField;
        
        private int Property_IdField;
        
        private string Property_NameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ServiceReferencePhotosProps.Photo Photo
        {
            get
            {
                return this.PhotoField;
            }
            set
            {
                this.PhotoField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PhotoPhoto_Id
        {
            get
            {
                return this.PhotoPhoto_IdField;
            }
            set
            {
                this.PhotoPhoto_IdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Property_Description
        {
            get
            {
                return this.Property_DescriptionField;
            }
            set
            {
                this.Property_DescriptionField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Property_Id
        {
            get
            {
                return this.Property_IdField;
            }
            set
            {
                this.Property_IdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Property_Name
        {
            get
            {
                return this.Property_NameField;
            }
            set
            {
                this.Property_NameField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReferencePhotosProps.IPhotoProps")]
    public interface IPhotoProps
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfacePhotos/AddPhoto", ReplyAction="http://tempuri.org/InterfacePhotos/AddPhotoResponse")]
        System.Threading.Tasks.Task<bool> AddPhotoAsync(ServiceReferencePhotosProps.Photo photo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfacePhotos/UpdatePhoto", ReplyAction="http://tempuri.org/InterfacePhotos/UpdatePhotoResponse")]
        System.Threading.Tasks.Task<ServiceReferencePhotosProps.Photo> UpdatePhotoAsync(ServiceReferencePhotosProps.Photo photo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfacePhotos/DeletePhoto", ReplyAction="http://tempuri.org/InterfacePhotos/DeletePhotoResponse")]
        System.Threading.Tasks.Task<int> DeletePhotoAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfacePhotos/GetPhotoById", ReplyAction="http://tempuri.org/InterfacePhotos/GetPhotoByIdResponse")]
        System.Threading.Tasks.Task<ServiceReferencePhotosProps.Photo> GetPhotoByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfacePhotos/GetPhotos", ReplyAction="http://tempuri.org/InterfacePhotos/GetPhotosResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ServiceReferencePhotosProps.Photo>> GetPhotosAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceProps/AddProp", ReplyAction="http://tempuri.org/InterfaceProps/AddPropResponse")]
        System.Threading.Tasks.Task<bool> AddPropAsync(ServiceReferencePhotosProps.Props prop);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceProps/UpdateProp", ReplyAction="http://tempuri.org/InterfaceProps/UpdatePropResponse")]
        System.Threading.Tasks.Task<ServiceReferencePhotosProps.Props> UpdatePropAsync(ServiceReferencePhotosProps.Props newProp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceProps/GetPropById", ReplyAction="http://tempuri.org/InterfaceProps/GetPropByIdResponse")]
        System.Threading.Tasks.Task<ServiceReferencePhotosProps.Props> GetPropByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceProps/DeleteProp", ReplyAction="http://tempuri.org/InterfaceProps/DeletePropResponse")]
        System.Threading.Tasks.Task<int> DeletePropAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    public interface IPhotoPropsChannel : ServiceReferencePhotosProps.IPhotoProps, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    public partial class PhotoPropsClient : System.ServiceModel.ClientBase<ServiceReferencePhotosProps.IPhotoProps>, ServiceReferencePhotosProps.IPhotoProps
    {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public PhotoPropsClient() : 
                base(PhotoPropsClient.GetDefaultBinding(), PhotoPropsClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.BasicHttpBinding_IPhotoProps.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public PhotoPropsClient(EndpointConfiguration endpointConfiguration) : 
                base(PhotoPropsClient.GetBindingForEndpoint(endpointConfiguration), PhotoPropsClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public PhotoPropsClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(PhotoPropsClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public PhotoPropsClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(PhotoPropsClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public PhotoPropsClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public System.Threading.Tasks.Task<bool> AddPhotoAsync(ServiceReferencePhotosProps.Photo photo)
        {
            return base.Channel.AddPhotoAsync(photo);
        }
        
        public System.Threading.Tasks.Task<ServiceReferencePhotosProps.Photo> UpdatePhotoAsync(ServiceReferencePhotosProps.Photo photo)
        {
            return base.Channel.UpdatePhotoAsync(photo);
        }
        
        public System.Threading.Tasks.Task<int> DeletePhotoAsync(int id)
        {
            return base.Channel.DeletePhotoAsync(id);
        }
        
        public System.Threading.Tasks.Task<ServiceReferencePhotosProps.Photo> GetPhotoByIdAsync(int id)
        {
            return base.Channel.GetPhotoByIdAsync(id);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ServiceReferencePhotosProps.Photo>> GetPhotosAsync()
        {
            return base.Channel.GetPhotosAsync();
        }
        
        public System.Threading.Tasks.Task<bool> AddPropAsync(ServiceReferencePhotosProps.Props prop)
        {
            return base.Channel.AddPropAsync(prop);
        }
        
        public System.Threading.Tasks.Task<ServiceReferencePhotosProps.Props> UpdatePropAsync(ServiceReferencePhotosProps.Props newProp)
        {
            return base.Channel.UpdatePropAsync(newProp);
        }
        
        public System.Threading.Tasks.Task<ServiceReferencePhotosProps.Props> GetPropByIdAsync(int id)
        {
            return base.Channel.GetPropByIdAsync(id);
        }
        
        public System.Threading.Tasks.Task<int> DeletePropAsync(int id)
        {
            return base.Channel.DeletePropAsync(id);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IPhotoProps))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IPhotoProps))
            {
                return new System.ServiceModel.EndpointAddress("http://localhost:8000/PC");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return PhotoPropsClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_IPhotoProps);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return PhotoPropsClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_IPhotoProps);
        }
        
        public enum EndpointConfiguration
        {
            
            BasicHttpBinding_IPhotoProps,
        }
    }
}
